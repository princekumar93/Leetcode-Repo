/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root, int &mn, int &pre) 
     {
         if(root->left != NULL) 
           minDiffInBST(root->left, mn, pre);
       
        if(pre >= 0)
           mn = min(mn, root->val - pre);
      
        pre = root->val;

        if(root->right != NULL)
            minDiffInBST(root->right, mn, pre);
        
        return mn;
     }
    
    int minDiffInBST(TreeNode* root) 
    {
        int mn = INT_MAX;
        int pre = -1;
       return minDiffInBST(root, mn, pre);
    }
};

