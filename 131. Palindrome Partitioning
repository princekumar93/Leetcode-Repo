class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> vv;
        vector<string> v;
        fun(vv, v, s,0);
        return vv;
    }
    
    void fun(vector<vector<string>> &vv, vector<string> &v, string &s, int index)
    {
        if(index == s.length())
        {
            vv.push_back(v);
            return;
        }
        
        for(int i = index; i< s.length(); i++)
        {
            if(isPalindrome(s, index, i))
            {
                v.push_back(s.substr(index, i - index + 1));
                fun(vv, v, s, i+1);
                v.pop_back();
            }
        }
    }   
    
    bool isPalindrome(const string &s, int start, int last)
    {
        while(start<=last)
        {
            if(s[start++]!= s[last--]) return false;
        }
        return true;
    }

};
